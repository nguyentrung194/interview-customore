version: "3.4"
services:
  proxy:
    image: nginx:alpine
    container_name: proxy
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./fullchainkey.pem:/etc/ssl/cert.pem
      - ./primarykey.pem:/etc/ssl/key.pem
    # restart: unless-stopped
    networks:
      - backend
  server:
    build:
      context: ./server
      target: development-build-stage
      dockerfile: Dockerfile
    container_name: server
    ports:
      - '5000:5000'
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6380
    env_file: common.env
    volumes:
      - ./server:/app
      - /app/node_modules
    # restart: 'unless-stopped'
    networks:
      - backend
    links:
      - redis
    depends_on:
      - redis
  client:
    build:
      context: ./client
      dockerfile: ./Dockerfile.dev
    ports:
      - 3000:3000
    # restart: unless-stopped
    volumes:
      - ./client:/app
      - /app/node_modules/
    command: npm start
  redis:
    image: redis:alpine
    hostname: redis
    ports:
      - 6380:6380
    networks:
      - backend
networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
